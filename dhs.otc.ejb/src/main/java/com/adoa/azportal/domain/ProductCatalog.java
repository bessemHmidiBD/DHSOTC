package com.adoa.azportal.domain;
// Generated Dec 24, 2009 6:29:00 PM by Hibernate Tools 3.2.4.GA

import java.math.BigDecimal;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.Type;



/**
 * ProductCatalog generated by hbm2java
 */
@Entity
@Table(name = "PRODUCT_CATALOG")
@NamedQueries({
    @NamedQuery(
    	name = "getAllFeesPerLicenseType",
    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId "
	), 
	@NamedQuery(
	    	name = "getBedLicenseFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
	    			" AND (:numBedsKids BETWEEN p.lowerBedChildLimit AND p.upperBedChildLimit) " +
	    			" AND p.upperBedChildLimit > 0"
	),
	@NamedQuery(
	    	name = "getPerBedFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
	    			" AND p.upperBedChildLimit = 0 " 
	),
	@NamedQuery(
	    	name = "getKidRegularLicenseFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
					" AND p.flagEmpower = :flagEmpower " +
					" AND p.flagLateFee = :flagLateFee "
	),
	@NamedQuery(
	    	name = "getKidEmpowerLicenseFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
	    			" AND p.flagEmpower = :flagEmpower "
	),
	@NamedQuery(
	    	name = "getKidLateFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
	    			" AND p.flagEmpower = :flagEmpower " +
	    			" AND p.flagLateFee = :flagLateFee " 
	),
	@NamedQuery(
	    	name = "getApplicationFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
	    			" AND p.id = 33  " 
	),
	@NamedQuery(
	    	name = "getMiscellaneousFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
	    			" AND p.id = 34  " 
	),
	@NamedQuery(
	    	name = "getPenaltyFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
	    			" AND p.id = 35  " 
	),
	@NamedQuery(
	    	name = "getNBSFirstFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
	    			" AND p.id = 36  " 
	),
	@NamedQuery(
	    	name = "getNBSSecondFee",
	    	query= "SELECT p FROM ProductCatalog p WHERE p.licenseTypeId = :licenseTypeId " +
	    			" AND p.id = 37  " 
	)}
)
public class ProductCatalog implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private long id;
	private short licenseTypeId;
	private String description;
	private String shortDesc;
	private Integer lowerBedChildLimit;
	private Integer upperBedChildLimit;
	private String productCode;
	private String cobj;
	private String aobj;
	private String index1;
	private String pca;
	private String revenueSource;
	private String function;
	private String accountingTemplate;
	private String departmentRevenueSource;
	private BigDecimal productFee;
	private String batchAgency;
	private String agency;
	private Boolean flagEmpower;
	private Boolean flagLateFee;
	private Set<LineItem> lineItems = new HashSet<LineItem>(0);

	public ProductCatalog() {
	}

	public ProductCatalog(long id, short licenseTypeId, String description, String shortDesc,
			Integer lowerBedChildLimit, Integer upperBedChildLimit, String productCode,
			String cobj, BigDecimal productFee, String batchAgency,
			String agency, Boolean flagEmpower, Boolean flagLateFee,String revenueSource, String function, String accountingTemplate, String departmentRevenueSource) {
		this.id = id;
		this.licenseTypeId = licenseTypeId;
		this.description = description;
		this.shortDesc = shortDesc;
		this.lowerBedChildLimit = lowerBedChildLimit;
		this.upperBedChildLimit = upperBedChildLimit;
		this.productCode = productCode;
		this.cobj = cobj;
		this.productFee = productFee;
		this.batchAgency = batchAgency;
		this.agency = agency;
		this.flagEmpower = flagEmpower;
		this.flagLateFee = flagLateFee;
		this.revenueSource = revenueSource;
		this.function = function;
		this.accountingTemplate = accountingTemplate;
		this.departmentRevenueSource = departmentRevenueSource;
	}
	public ProductCatalog(long id, 
			short licenseTypeId, String description,
			String shortDesc, Integer lowerBedChildLimit, Integer upperBedChildLimit,
			String productCode, String cobj, String aobj, String index1,
			String pca, BigDecimal productFee, String batchAgency,
			String agency, Boolean flagEmpower, Boolean flagLateFee,
			Set<LineItem> lineItems, String revenueSource, String function, String accountingTemplate, String departmentRevenueSource) {
		this.id = id;
		this.licenseTypeId = licenseTypeId;
		this.description = description;
		this.shortDesc = shortDesc;
		this.lowerBedChildLimit = lowerBedChildLimit;
		this.upperBedChildLimit = upperBedChildLimit;
		this.productCode = productCode;
		this.cobj = cobj;
		this.aobj = aobj;
		this.index1 = index1;
		this.pca = pca;
		this.productFee = productFee;
		this.batchAgency = batchAgency;
		this.agency = agency;
		this.flagEmpower = flagEmpower;
		this.flagLateFee = flagLateFee;
		this.lineItems = lineItems;
		this.revenueSource = revenueSource;
		this.function = function;
		this.accountingTemplate = accountingTemplate;
		this.departmentRevenueSource = departmentRevenueSource;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}


	@Column(name = "LICENSE_TYPE_ID", nullable = false)
	public short getLicenseTypeId() {
		return this.licenseTypeId;
	}

	public void setLicenseTypeId(short licenseTypeId) {
		this.licenseTypeId = licenseTypeId;
	}

	@Column(name = "DESCRIPTION", nullable = false, length = 100)
	@NotNull
	@Size(max = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "SHORT_DESC", nullable = false, length = 40)
	@NotNull
	@Size(max = 40)
	public String getShortDesc() {
		return this.shortDesc;
	}

	public void setShortDesc(String shortDesc) {
		this.shortDesc = shortDesc;
	}

	@Column(name = "LOWER_BED_CHILD_LIMIT", nullable = false)
	public Integer getLowerBedChildLimit() {
		return this.lowerBedChildLimit;
	}

	public void setLowerBedChildLimit(Integer lowerBedChildLimit) {
		this.lowerBedChildLimit = lowerBedChildLimit;
	}

	@Column(name = "UPPER_BED_CHILD_LIMIT", nullable = false)
	public Integer getUpperBedChildLimit() {
		return this.upperBedChildLimit;
	}

	public void setUpperBedChildLimit(Integer upperBedChildLimit) {
		this.upperBedChildLimit = upperBedChildLimit;
	}

	@Column(name = "PRODUCT_CODE", nullable = false, length = 20)
	@NotNull
	@Size(max = 20)
	public String getProductCode() {
		return this.productCode;
	}

	public void setProductCode(String productCode) {
		this.productCode = productCode;
	}

	@Column(name = "COBJ", nullable = false, length = 10)
	@NotNull
	@Size(max = 10)
	public String getCobj() {
		return this.cobj;
	}

	public void setCobj(String cobj) {
		this.cobj = cobj;
	}

	@Column(name = "AOBJ", length = 10)
	@Size(max = 10)
	public String getAobj() {
		return this.aobj;
	}

	public void setAobj(String aobj) {
		this.aobj = aobj;
	}

	@Column(name = "INDEX1", length = 10)
	@Size(max = 10)
	public String getIndex1() {
		return this.index1;
	}

	public void setIndex1(String index1) {
		this.index1 = index1;
	}

	@Column(name = "PCA", length = 10)
	@Size(max = 10)
	public String getPca() {
		return this.pca;
	}

	public void setPca(String pca) {
		this.pca = pca;
	}

	@Column(name = "PRODUCT_FEE", nullable = false, columnDefinition = "decimal", precision = 19, scale = 2)
	@NotNull
	public BigDecimal getProductFee() {
		return this.productFee;
	}

	public void setProductFee(BigDecimal productFee) {
		this.productFee = productFee;
	}

	@Column(name = "BATCH_AGENCY", nullable = false, length = 20)
	@NotNull
	@Size(max = 20)
	public String getBatchAgency() {
		return this.batchAgency;
	}

	public void setBatchAgency(String batchAgency) {
		this.batchAgency = batchAgency;
	}

	@Column(name = "AGENCY", nullable = false, length = 20)
	@NotNull
	@Size(max = 20)
	public String getAgency() {
		return this.agency;
	}

	public void setAgency(String agency) {
		this.agency = agency;
	}

	@Column(name = "FLAG_EMPOWER", nullable = false, length = 1)
	@Type(type="org.hibernate.type.YesNoType")
	public Boolean getFlagEmpower() {
		return this.flagEmpower;
	}

	public void setFlagEmpower(Boolean flagEmpower) {
		this.flagEmpower = flagEmpower;
	}

	@Column(name = "FLAG_LATE_FEE", nullable = false, length = 1)
	@Type(type="org.hibernate.type.YesNoType")
	public Boolean getFlagLateFee() {
		return this.flagLateFee;
	}

	public void setFlagLateFee(Boolean flagLateFee) {
		this.flagLateFee = flagLateFee;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "productCatalog")
	public Set<LineItem> getLineItems() {
		return this.lineItems;
	}

	public void setLineItems(Set<LineItem> lineItems) {
		this.lineItems = lineItems;
	}
	
	
	@Column(name = "REVENUE_SOURCE", length = 4)
	@Size(max = 4)
	public String getRevenueSource() {
		return revenueSource;
	}

	public void setRevenueSource(String revenueSource) {
		this.revenueSource = revenueSource;
	}

	@Column(name = "FUNCTION_ADV", length = 10)
	@Size(max = 10)
	public String getFunction() {
		return function;
	}

	public void setFunction(String function) {
		this.function = function;
	}

	@Column(name = "ACCOUNTING_TEMPLATE", length = 10)
	@Size(max = 10)
	public String getAccountingTemplate() {
		return accountingTemplate;
	}

	public void setAccountingTemplate(String accountingTemplate) {
		this.accountingTemplate = accountingTemplate;
	}

	@Column(name = "DEP_REVENUE_SOURCE", length = 6)
	@Size(max = 6)
	public String getDepartmentRevenueSource() {
		return departmentRevenueSource;
	}

	public void setDepartmentRevenueSource(String departmentRevenueSource) {
		this.departmentRevenueSource = departmentRevenueSource;
	}

	public String toString(ProductCatalog record) {
		
		// Declare & initialize.
		StringBuffer retval = new StringBuffer();
		
		retval.append("Id:                  " + record.getId() + "\n");
		retval.append("LicenseType:         " + record.getLicenseTypeId() + "\n");
		retval.append("Description:         " + record.getDescription() + "\n");
		retval.append("ShortDesc:           " + record.getShortDesc() + "\n");
		retval.append("LowerBedChildLimit:  " + record.getLowerBedChildLimit() + "\n");
		retval.append("UpperBedChildLimit:  " + record.getUpperBedChildLimit() + "\n");
		retval.append("ProductCode:         " + record.getProductCode() + "\n");
		retval.append("Cobj:                " + record.getCobj() + "\n");
		retval.append("Aobj:                " + record.getAobj() + "\n");
		retval.append("Index1:              " + record.getIndex1() + "\n");
		retval.append("Pca:                 " + record.getPca() + "\n");
		retval.append("revenueSource:                 " + record.getRevenueSource() + "\n");
		retval.append("function:                 " + record.getFunction() + "\n");
		retval.append("accountingTemplate:                 " + record.getAccountingTemplate() + "\n");
		retval.append("departmentRevenueSource:                 " + record.getDepartmentRevenueSource() + "\n");
		retval.append("ProductFee:          " + record.getProductFee() + "\n");
		retval.append("BatchAgency:         " + record.getBatchAgency() + "\n");
		retval.append("Agency:              " + record.getAgency() + "\n");
		retval.append("FlagEmpower:         " + record.getFlagEmpower() + "\n");
		retval.append("FlagLateFee:         " + record.getFlagLateFee() + "\n");
		
		return retval.toString();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (int) (id ^ (id >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ProductCatalog other = (ProductCatalog) obj;
		if (id != other.id)
			return false;
		return true;
	}
	

}
