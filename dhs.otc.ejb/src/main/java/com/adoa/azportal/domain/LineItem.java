package com.adoa.azportal.domain;

// Generated Dec 24, 2009 6:29:00 PM by Hibernate Tools 3.2.4.GA

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.ColumnResult;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.QueryHint;
import javax.persistence.SqlResultSetMapping;
import javax.persistence.Table;

import com.adoa.azportal.persistence.generator.StoredProcedures;

@SqlResultSetMapping(name = "scalar", columns = @ColumnResult(name = "id"))
@NamedNativeQueries({
		@NamedNativeQuery(name = StoredProcedures.ORDER_SEQUENCE, query = StoredProcedures.ORDER_SEQUENCE, hints = {
				@QueryHint(name = "org.hibernate.callable", value = "true"),
				@QueryHint(name = "org.hibernate.readOnly", value = "true") }, resultSetMapping = "scalar") })
/**
 * LineItem generated by hbm2java
 */
@Entity
@Table(name = "LINE_ITEM")
public class LineItem implements Serializable {

	private static final long serialVersionUID = 1L;
	private long id;
	private ProductCatalog productCatalog;
	private Orders orders;
	private Double itemFees;

	public LineItem() {
	}

	public LineItem(long id, ProductCatalog productCatalog, Orders orders, Double itemFees) {

		this.id = id;
		this.productCatalog = productCatalog;
		this.orders = orders;
		this.itemFees = itemFees;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROD_CAT_ID", nullable = false)
	// @NotNull
	public ProductCatalog getProductCatalog() {
		return this.productCatalog;
	}

	public void setProductCatalog(ProductCatalog productCatalog) {
		this.productCatalog = productCatalog;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORDER_ID", nullable = false)
	// @NotNull
	public Orders getOrders() {
		return this.orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}

	@Column(name = "ITEM_FEES", length = 50)
	// @Length(max = 50)
	public Double getItemFees() {
		return this.itemFees;
	}

	public void setItemFees(Double itemFees) {
		this.itemFees = itemFees;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (int) (id ^ (id >>> 32));
		result = prime * result + ((productCatalog == null) ? 0 : productCatalog.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		LineItem other = (LineItem) obj;
		if (id != other.id)
			return false;
		if (productCatalog == null) {
			if (other.productCatalog != null)
				return false;
		} else if (!productCatalog.equals(other.productCatalog))
			return false;
		return true;
	}

}
